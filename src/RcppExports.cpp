// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// getSparseMatrix
SEXP getSparseMatrix(size_t numOfGenes, size_t numOfOriginalCells, std::string countMatFilename, bool tierImport);
RcppExport SEXP _fishpond_getSparseMatrix(SEXP numOfGenesSEXP, SEXP numOfOriginalCellsSEXP, SEXP countMatFilenameSEXP, SEXP tierImportSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< size_t >::type numOfGenes(numOfGenesSEXP);
    Rcpp::traits::input_parameter< size_t >::type numOfOriginalCells(numOfOriginalCellsSEXP);
    Rcpp::traits::input_parameter< std::string >::type countMatFilename(countMatFilenameSEXP);
    Rcpp::traits::input_parameter< bool >::type tierImport(tierImportSEXP);
    rcpp_result_gen = Rcpp::wrap(getSparseMatrix(numOfGenes, numOfOriginalCells, countMatFilename, tierImport));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fishpond_getSparseMatrix", (DL_FUNC) &_fishpond_getSparseMatrix, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_fishpond(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
